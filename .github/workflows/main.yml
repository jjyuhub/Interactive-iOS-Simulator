name: Remote iOS Simulator with NoMachine NX (Auto-Fix for iPhone 15+)

on: [push]

jobs:
  ios-nomachine-stream:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install NoMachine (Verbose Logging)
        run: |
          echo "🔍 Installing NoMachine..."
          brew install --cask nomachine
          
          echo "📂 Listing installed files..."
          find / -name "NoMachine*" 2>/dev/null | tee nomachine_installed_files.txt

          echo "🔎 Searching for nxserver..."
          NX_PATH=$(find / -name "nxserver" 2>/dev/null | head -n 1)

          if [ -z "$NX_PATH" ]; then
            echo "❌ NoMachine nxserver not found! Exiting..."
            exit 1
          else
            echo "✅ Found NoMachine nxserver at: $NX_PATH"
          fi

          echo "🚀 Starting NoMachine server..."
          sudo $NX_PATH --startup auto
          sudo $NX_PATH --status | tee nx_status.txt

      - name: Upload NoMachine Server Status and Logs
        uses: actions/upload-artifact@v4
        with:
          name: nomachine-status
          path: |
            nx_status.txt
            nomachine_installed_files.txt

      - name: Install Xcode and Boot iOS Simulator (Auto-Detect iPhone 15+)
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
          xcodebuild -version
          sudo xcodebuild -license accept
          
          echo "📋 Listing available iOS devices..."
          xcrun simctl list devices | tee available_devices.txt
          
          # Find the first available iPhone (prefer iPhone 15, otherwise pick any)
          DEVICE_ID=$(xcrun simctl list devices | grep -E "iPhone 15|iPhone 16|iPhone SE" | grep -Eo '[A-F0-9\-]+ \(Shutdown\)' | head -n 1 | awk '{print $1}')
          
          if [ -z "$DEVICE_ID" ]; then
            echo "❌ No available iPhone simulators found! Exiting..."
            exit 1
          else
            echo "✅ Booting simulator: $DEVICE_ID"
            xcrun simctl boot "$DEVICE_ID"
          fi
          
          open -a Simulator || echo "Failed to open simulator"

      - name: Upload Available Devices Log
        uses: actions/upload-artifact@v4
        with:
          name: available-devices
          path: available_devices.txt

      - name: Install and Start ngrok (to expose NoMachine)
        run: |
          brew install ngrok/ngrok/ngrok
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          ngrok tcp 4000 > ngrok_nomachine.txt &

      - name: Upload ngrok URL for NoMachine
        uses: actions/upload-artifact@v4
        with:
          name: nomachine-ngrok-url
          path: ngrok_nomachine.txt
